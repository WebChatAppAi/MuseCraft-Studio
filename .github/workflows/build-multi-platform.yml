name: Build Multi-Platform

on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - '.gitignore'
  pull_request:
    branches: [ main, develop ]
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - '.gitignore'
  workflow_dispatch:
    inputs:
      build_target:
        description: 'Build target (windows, macos, linux, all)'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - windows
          - macos
          - linux

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: win
            artifact_pattern: "dist/v*/musecraft-app-*.exe"
            zip_pattern: "dist/v*/musecraft-app-*-win*.zip"
            name: windows
          - os: macos-latest
            platform: mac
            artifact_pattern: "dist/v*/musecraft-app-*.dmg"
            zip_pattern: "dist/v*/musecraft-app-*-mac*.zip"
            name: macos
          - os: ubuntu-latest
            platform: linux
            artifact_pattern: "dist/v*/musecraft-app-*.AppImage"
            zip_pattern: "dist/v*/musecraft-app-*.deb"
            name: linux
    
    runs-on: ${{ matrix.os }}
    
    # Skip job if workflow_dispatch with specific target that doesn't match current platform
    if: |
      github.event_name != 'workflow_dispatch' || 
      github.event.inputs.build_target == 'all' || 
      github.event.inputs.build_target == matrix.name
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10.0.0
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Build application
      run: pnpm run prebuild
      
    - name: Build for platform
      run: pnpm electron-builder --${{ matrix.platform }}
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.name }}-build-${{ github.run_number }}
        path: |
          ${{ matrix.artifact_pattern }}
          ${{ matrix.zip_pattern }}
        retention-days: 30
        
    - name: Upload to release (on tags)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: |
          ${{ matrix.artifact_pattern }}
          ${{ matrix.zip_pattern }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Summary job for PR status checks
  build-summary:
    runs-on: ubuntu-latest
    needs: build
    if: always()
    steps:
    - name: Check build results
      run: |
        if [[ "${{ needs.build.result }}" == "success" ]]; then
          echo "✅ All builds completed successfully"
        else
          echo "❌ Some builds failed"
          exit 1
        fi